version: '3.8'

services:
  api:
    build: .
    container_name: h-pulse-mirage-api
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - ./storage:/app/storage
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@db:5432/h_pulse_mirage
      - SECRET_KEY=${SECRET_KEY:-h_pulse_mirage_secret_key_change_in_production}
      - DEBUG=${DEBUG:-False}
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - h-pulse-network

  db:
    image: postgres:15
    container_name: h-pulse-mirage-db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=h_pulse_mirage
    restart: unless-stopped
    networks:
      - h-pulse-network

  prometheus:
    image: prom/prometheus:latest
    container_name: h-pulse-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - h-pulse-network

  grafana:
    image: grafana/grafana:latest
    container_name: h-pulse-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    depends_on:
      - prometheus
    networks:
      - h-pulse-network

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  h-pulse-network:
    driver: bridge 